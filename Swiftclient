@name Swiftclient
@inputs EGP:wirelink
@persist S:array INT INT2 Lock Target:entity Thermal
@trigger none

if(first()){

#[
      _____ __    __  _____  ______   __  _      __  ____   ______ 
     / ___/|  |__|  ||     ||      | /  ]| |    |  ||    \ |      |
    (   \_ |  |  |  ||   __||      |/  / | |    |  ||  _  ||      |
     \__  ||  |  |  ||  |_  |_|  |_/  /  | |___ |__||  |  ||_|  |_|
     /  \ ||  `  '  ||   _]   |  |/   \_ |     | __ |  |  |  |  |  
     \    | \      / |  |     |  |\     ||     ||  ||  |  |  |  |  
      \___|  \_/\_/  |__|     |__| \____||_____||__||__|__|  |__|  
                                                                   
]#
    
    #[
        
        Introduction...
        
        
        Cheats and other stuff by Naki
        
        Requirements:
        concmd to be enabled for "flir_enable 1" command (thermal, test it yourself if you don't believe me)
        
        Features:
        
        Wallhacks
        Aimbot
        Thermal Vision
        
        
        More will be added later
        
        
        Controls:
        
        Mouse2 toggles aimbot
        G toggles thermal
        
        Settings below:
        
    ]#
    
    #[-- Settings --]#
    
    
    #Player count, increase this in case there are more people on the server than 25 #def 25
    Player_count=25
    
    #Max distance where the detailed info will stop showing, higher value = longer distance for detailed info & worse performance #def 1000/1500/2000
    Max_Distance=1500
    
    #If player is too far name will be displayed #def 1
    Show_Simple_Names_If_Too_Far=1
    
    #Interval of the hud, lower value = higher refresh rate & worse performance #def 100/200/250
    Hud_refresh_Rate=100
    
    #Toggles aimbot #def 1
    Use_Aimbot=1
    
    #Interval of the aimbot #def 25/50/100
    Aimbot_Refresh_Rate=25
    
    
    #[-- Settings End Here--]#
    
    
    
    
    #Writes the settings into a single array
    S=array(Player_count,Max_Distance,Show_Simple_Names_If_Too_Far,Use_Aimbot)
    
    #This lists the e2 as "generic"
    setName("")
    
    INT=Hud_refresh_Rate
    INT2=Aimbot_Refresh_Rate
    EGP:egpClear()
    timer("EGPrefresh",INT)
    if(Use_Aimbot){
        timer("ABrefresh",INT2)
        runOnKeys(owner(),1)
    }
}elseif(dupefinished()){
    reset()
}else{
    if(clk("EGPrefresh")){
        local S1 = S[1,number]
        local S2 = S[2,number]
        local S3 = S[3,number]
        
        foreach(I,E:entity=players()){
            if(S3){
                EGP:egp3DTracker(I+(S1*2),vec(0,0,E:height()/2))
                EGP:egpParent(I+(S1*2),E)
            }
            if(E:pos():distance(owner():pos())<S2){
            if(E!=owner()){
                EGP:egp3DTracker(I,E:attachmentPos("eyes")-E:pos())
                EGP:egpParent(I,E)
                
                if(!S3){
                    EGP:egp3DTracker(I+(S1*2),vec(0,0,E:height()/2))
                    EGP:egpParent(I+(S1*2),E)
                }
                
                EGP:egp3DTracker(I+(S1*3),E:attachmentPos("anim_attachment_RH")-E:pos())
                EGP:egpParent(I+(S1*3),E)
                
                EGP:egpBoxOutline(I+(S1*4),vec2(0),vec2(35*10)/(1+(E:pos():distance(owner():pos())*0.035)))
                
                EGP:egpBoxOutline(I+(S1*5),vec2(0),(vec2(50,125)*18)/(1+(E:pos():distance(owner():pos())*0.035)))
                
                EGP:egpCircleOutline(I+(S1*6),vec2(0),vec2(60)/(1+(E:pos():distance(owner():pos())*0.035)))
                
                EGP:egpLine(I+(S1*7),vec2(-700,clamp(-1125+((1125*2)*(E:health()/100)),-1125,1125))/(1+(E:pos():distance(owner():pos())*0.035)),vec2(-700,-1125)/(1+(E:pos():distance(owner():pos())*0.035)))
                EGP:egpSize(I+(S1*7),45/(1+(E:pos():distance(owner():pos())*0.035)))
                
                EGP:egpText(I+(S1*8),E:name(),vec2(-465,1125)/(1+(E:pos():distance(owner():pos())*0.035)))
                EGP:egpSize(I+(S1*8),175/(1+(E:pos():distance(owner():pos())*0.035)))
                
                EGP:egpText(I+(S1*9),E:weapon():type(),vec2(-465,1250)/(1+(E:pos():distance(owner():pos())*0.035)))
                EGP:egpSize(I+(S1*9),175/(1+(E:pos():distance(owner():pos())*0.035)))
                
                EGP:egpParent(I+(S1*4),I)
                EGP:egpColor(I+(S1*4),vec(255,255,0))
                
                EGP:egpParent(I+(S1*5),I+(S1*2))
                EGP:egpColor(I+(S1*5),vec(100))
                
                EGP:egpParent(I+(S1*6),I+(S1*3))
                EGP:egpColor(I+(S1*6),vec(255,0,0))
                
                EGP:egpParent(I+(S1*7),I+(S1*2))
                EGP:egpColor(I+(S1*7),vec(clamp(175-(175*(E:health()/100)),0,175),clamp(100*(E:health()/100),0,100),0))
                
                EGP:egpParent(I+(S1*8),I+(S1*2))
                EGP:egpColor(I+(S1*8),teamColor(E:team()))
                
                EGP:egpParent(I+(S1*9),I+(S1*2))
                EGP:egpColor(I+(S1*9),vec(255,0,0))
            }
            }else{
                EGP:egpRemove(I)
                EGP:egpRemove(I+(S1*3))
                EGP:egpRemove(I+(S1*4))
                EGP:egpRemove(I+(S1*5))
                EGP:egpRemove(I+(S1*6))
                EGP:egpRemove(I+(S1*7))
                EGP:egpRemove(I+(S1*9))
                
                if(S3){
                    EGP:egpText(I+(S1*8),E:name(),vec2())
                    EGP:egpParent(I+(S1*8),I+(S1*2))
                    EGP:egpColor(I+(S1*8),teamColor(E:team()))
                    EGP:egpSize(I+(S1*8),10)
                }else{
                    EGP:egpRemove(I+(S1*8))
                }
            }
        }
        timer("EGPrefresh",INT)
    }
    if(S[4,number]){
        if(changed(owner():keyAttack2())&owner():keyAttack2()){
            Lock=(!Lock)*(owner():aimEntity():type()==owner():type())
            if(owner():aimEntity():type()==owner():type()){
                Target=owner():aimEntity()
                timer("ABrefresh",INT2)
            }
        }
    }
    if(changed(owner():keyPressed("g"))&owner():keyPressed("g")){
        Thermal=!Thermal
        concmd("flir_toggle")
        concmd("flir_enabled "+Thermal)
    }
}

if(Lock){
    if(clk("ABrefresh")){
        #this line prevents the e2 from crashing
        if(cpuUsage()/timeQuota()<0.2 & opcounter()/hardQuota() < 0.2){
            Ang=(Target:attachmentPos("eyes")-owner():shootPos()):toAngle()
            owner():plySetAng(Ang*ang(1,1,0))
        }
        timer("ABrefresh",INT2)
    }
}

